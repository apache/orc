name: Build and test

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    name: "Build with Java ${{ matrix.java }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-10.15
          - macos-11
        java:
          - 1.8
          - 11
          - 17
    env:
      MAVEN_OPTS: -Xmx2g
      MAVEN_SKIP_RC: true
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache Maven local repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ matrix.java }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ matrix.java }}-maven-
    - name: Install Java ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: "Test"
      run: |
        mkdir -p ~/.m2
        mkdir build
        cd build
        if [ "${{ matrix.os }}" = "ubuntu-20.04" ]; then
          cmake -DANALYZE_JAVA=ON ..
        else
          cmake -DANALYZE_JAVA=ON -DOPENSSL_ROOT_DIR=`brew --prefix openssl` ..
        fi
        make package test-out

  doc:
    name: "Javadoc generation"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Java 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: "javadoc"
      run: |
        mkdir -p ~/.m2
        cd java
        mvn install -DskipTests
        mvn javadoc:javadoc
